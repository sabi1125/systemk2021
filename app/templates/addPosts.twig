{% extends "index.twig" %}
{% block title %}
<title>Edit Profile</title>
{% endblock %}

{% block profiler %}
<div class="profiler">
{% include "components/currentProfile.twig" with {"username" : currentUsername , "profilePic" : currentProfilePic } %}
</div>
{% endblock %}


{% block main %}

{% if errors %}

{% include "components/errors.twig" with {"error" : errors} %}

{% endif %}


    <div class="edit">
      <form action="addPosts.php" method="post">
      <h3>Whats on your mind?</h3>
      <input type="text" name="post" placeholder="What's on your mind">
      <br>
      <input type="file" accept="image/*" name="image" id="imageInput" multiple>
      <input id="imageBase64Input" type="hidden" name="image_base64">
      <canvas id="imageCanvas" style="display: none;"></canvas>
      {% include "components/button.twig" with {"name":"submit","value":"post","id":"Post"} %}
      </form>
    </div>
{% endblock %}


{% block style %}

<style>
*{
    padding:0;
    margin:0;
}

.edit{
    height:100vh;
    display:flex;
    flex-direction:column;
    justify-content:center;
    align-items:center;
}
.edit form {
    display:flex;
    height:38vh;
    flex-direction:column;
}
.edit form h3 {
    padding:20px;
}

.edit form input{
    width: 500px;
    padding: 10px;
}
@media (max-width:980px){
}
</style>

{% endblock %}

{% block script %}
<script>
document.addEventListener("DOMContentLoaded", () => {
  const imageInput = document.getElementById("imageInput");
  imageInput.addEventListener("change", () => {
    if (imageInput.files.length < 1) {
      return;
    }

    const file = imageInput.files[0];
    if (!file.type.startsWith('image/')){
      return;
    }
    const imageBase64Input = document.getElementById("imageBase64Input");
    const canvas = document.getElementById("imageCanvas");
    const reader = new FileReader();
    const image = new Image();
    reader.onload = () => {
      image.onload = () => {
        const originalWidth = image.naturalWidth;
        const originalHeight = image.naturalHeight;
        const maxLength = 1000; 
        if (originalWidth <= maxLength && originalHeight <= maxLength) {
            canvas.width = originalWidth;
            canvas.height = originalHeight;
        } else if (originalWidth > originalHeight) {
            canvas.width = maxLength;
            canvas.height = maxLength * originalHeight / originalWidth;
        } else {
            canvas.width = maxLength * originalWidth / originalHeight;
            canvas.height = maxLength;
        }

        const context = canvas.getContext("2d");
        context.drawImage(image, 0, 0, canvas.width, canvas.height);

        imageBase64Input.value = canvas.toDataURL();
      };
      image.src = reader.result;
    };
    reader.readAsDataURL(file);
  });
});
</script>


{% endblock %}
